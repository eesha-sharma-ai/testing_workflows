name: PR Creation Automation from Release to Main

on:
  push:
    branches:
      - 'release-*'

jobs:
  cherry-pick-commit-to-main:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write

    steps:
    - name: Checkout the code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Git
      run: |
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"

    - name: Extract Commit SHA from the push event
      id: get_commit_sha
      run: |
        echo "commit_sha=${{ github.event.head_commit.id }}" >> $GITHUB_ENV
        short_sha=$(git rev-parse --short HEAD)
        echo "short_commit_sha=$short_sha" >> $GITHUB_ENV

    - name: Extract Branch Name
      id: extract_branch_name
      run: |
        branch_name=${{ github.ref }}
        branch_name=${branch_name#refs/heads/}
        echo "branch_name=${branch_name}" >> $GITHUB_ENV

    - name: Create a new branch for cherry-picking
      run: |
        git checkout main
        git pull origin main
        git checkout -b "cherry-pick-${{ env.short_commit_sha }}"

    - name: Cherry-pick the commit onto the new branch
      run: |
        git cherry-pick -X theirs -m 1 ${{ env.commit_sha }} || git cherry-pick --skip

    - name: Push the new branch to origin
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git push origin cherry-pick-${{ env.short_commit_sha }} --verbose

    - name: Set up GitHub CLI
      run: sudo apt-get install gh

    - name: Authenticate with GitHub CLI
      run: gh auth login --with-token <<< ${{ secrets.PAT }}

    - name: Create Pull Request
      run: |
        gh pr create \
          --title "Cherry-pick commit ${{ env.short_commit_sha }} to main" \
          --body "This PR cherry-picks commit ${{ env.commit_sha }} from cherry-pick-${{ env.short_commit_sha }} into the main branch." \
          --base main \
          --head cherry-pick-${{ env.short_commit_sha }} \
          --assignee "${{ github.actor }}"

